<Page
    x:Class="AudioPlayerFrontend.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AudioPlayerFrontend"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctl="using:StdOttUwp.Controls"
    xmlns:com="using:AudioPlayerBackend.Player"
    xmlns:con="using:StdOttUwp.Converters"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    Loaded="Page_Loaded">

    <Page.Resources>
        <local:VolumeToolTipConverter x:Key="volTooTipCon"/>
        <local:IsIMqttAudioConverter x:Key="viewClientSetCon" />

        <com:PlaybackState x:Key="playingState">Playing</com:PlaybackState>
        <Symbol x:Key="playSym">Play</Symbol>
        <Symbol x:Key="pauseSym">Pause</Symbol>
        <con:IsValueToTwoValueConverter x:Key="isPlayPauseIconCon"
                                        CompareValue="Playing" DecideType="Enum"
                                        EqualsValue="{StaticResource pauseSym}"
                                        NotEqualsValue="{StaticResource playSym}"/>
        <con:IsValueToTwoValueConverter x:Key="isPlayPauseLabelCon"
                                        CompareValue="Playing" DecideType="Enum"
                                        EqualsValue="Pause"
                                        NotEqualsValue="Play"/>

        <con:VisibleCollapsedConverter x:Key="visCon" />
        <con:CollapsedVisibleConverter x:Key="hidCon" />

        <local:LoopIconConverter x:Key="loopIcoCon" />

        <x:Int32 x:Key="negativeOne">-1</x:Int32>
    </Page.Resources>

    <Grid DataContext="{Binding Service}">
        <Grid Visibility="{Binding Audio,Converter={StaticResource visCon}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Margin="3" Visibility="{Binding ElementName=atbAdvSettings,Path=IsChecked,Converter={StaticResource visCon}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Margin="5,0" VerticalAlignment="Center"
                      Visibility="{Binding Player,Converter={StaticResource viewClientSetCon}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <CheckBox Content="Stream" VerticalAlignment="Center"
                              Margin="0,0,-40,0" IsChecked="{Binding Communicator.IsStreaming,Mode=TwoWay}"/>
                    <Slider Grid.Column="1" Maximum="1" VerticalAlignment="Center" Margin="0,0,0,-8"
                            SnapsTo="StepValues" StepFrequency="0.01" Value="{Binding Player.Player.Volume}"
                            ThumbToolTipValueConverter="{StaticResource volTooTipCon}"
                            IsEnabled="{Binding Communicator.IsStreaming}"/>
                </Grid>

                <ctl:IconButton Grid.Column="1" Margin="3" Click="IbnLoopType_Click"
                                Symbol="{Binding Audio.CurrentPlaylist.Loop,
                                  Converter={StaticResource loopIcoCon}}" />

                <ToggleButton Grid.Column="2" Margin="3" 
                              IsChecked="{Binding Audio.CurrentPlaylist.IsAllShuffle,Mode=TwoWay}">
                    <SymbolIcon Symbol="Shuffle"/>
                </ToggleButton>
            </Grid>

            <Grid Grid.Row="1" Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Volume:" VerticalAlignment="Center" Margin="3,3,5,0"/>
                <Slider Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,-12" SnapsTo="StepValues"
                        StepFrequency="0.01" Maximum="1" Value="{Binding Audio.Volume,Mode=TwoWay}"
                        ThumbToolTipValueConverter="{StaticResource volTooTipCon}"/>

                <ctl:IconButton Grid.Column="4" Symbol="Find" Margin="3" Click="IbnSearch_Click"/>
            </Grid>

            <con:MultipleInputs4Converter x:Name="micSongs" 
                                          Input0="{Binding Audio.CurrentPlaylist.AllSongs}" 
                                          Input1="{Binding Audio.CurrentPlaylist.CurrentSong}" 
                                          Input2="{Binding Audio.CurrentPlaylist.WannaSong,Mode=TwoWay}" 
                                          Input3="{StaticResource negativeOne}"
                                          ConvertRef="MicCurrentSongIndex_ConvertRef"/>

            <con:MultipleInputs2Converter x:Name="micDoRemove" 
                                          Input1="{Binding Audio.CurrentPlaylist}"
                                          Convert="MicDoRemove_Convert"/>

            <ListBox Grid.Row="2" x:Name="lbxSongs" Margin="0,5" HorizontalAlignment="Stretch"
                     ItemsSource="{Binding ElementName=micSongs,Path=Output}"
                     SelectedIndex="{Binding ElementName=micSongs,Path=Input3,Mode=TwoWay}"
                     SelectionChanged="LbxSongs_SelectionChanged">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,-8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.RowSpan="2" TextAlignment="Center" Margin="5,0,10,0"
                                       VerticalAlignment="Center" Text="{Binding Index}"
                                       Visibility="{Binding ElementName=atbViewIndex,Path=IsChecked,Converter={StaticResource visCon}}"/>

                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Title}"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Artist}" FontStyle="Italic"/>

                            <ctl:IconButton Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Click="IbnRemove_Click"
                                            Symbol="Remove" Visibility="{Binding ElementName=micDoRemove,
                                              Path=Output,Converter={StaticResource visCon}}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Row="2" DataContext="{Binding Audio}">                
                <con:MultipleInputs4Converter x:Name="micPlaylists"
                                              Input0="{Binding SourcePlaylists.Count}"
                                              Input1="{Binding Playlists.Count}"
                                              Input2="{Binding CurrentPlaylist,Mode=TwoWay}"
                                              ConvertRef="MicPlaylists_Convert"/>

                <ListBox x:Name="lbxPlaylists" Margin="0,5" SelectionMode="Single"
                         ItemsSource="{Binding ElementName=micPlaylists,Path=Output}"
                         SelectedItem="{Binding ElementName=micPlaylists,Path=Input3,Mode=TwoWay}"
                         Visibility="{Binding ElementName=atbPlaylists,Path=IsChecked,Converter={StaticResource visCon}}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock FontWeight="SemiBold" FontSize="17"
                                           TextWrapping="WrapWholeWords" Text="{Binding Name}"/>

                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <TextBlock Text="{Binding Songs.Length}"/>
                                    <TextBlock Text=" Song(s)"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>


            <Grid Grid.Row="3" Margin="5,1" DataContext="{Binding Audio.CurrentPlaylist}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel DataContext="{Binding CurrentSong}" Tapped="SplCurrentSong_Tapped">
                    <TextBlock Text="{Binding Title}" Margin="1" FontWeight="SemiBold" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding Artist}" FontStyle="Italic" Margin="1" TextWrapping="Wrap"/>
                </StackPanel>
            </Grid>

            <local:AudioPositionSlider Grid.Row="4" Position="{Binding Audio.CurrentPlaylist.Position}"
                                       Duration="{Binding Audio.CurrentPlaylist.Duration}"
                                       UserPositionChanged="AudioPositionSlider_UserPositionChanged"/>
        </Grid>

        <StackPanel VerticalAlignment="Center" Visibility="{Binding Audio,Converter={StaticResource hidCon}}">
            <ProgressRing Grid.Row="1" IsActive="True" Height="100" Width="100" Margin="10"/>
            <Button Grid.Row="2" Content="Settings" Width="100" Margin="5"
                    HorizontalAlignment="Center" Click="BtnSettings_Click"/>
        </StackPanel>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar Visibility="{Binding Service.Audio,Converter={StaticResource visCon}}">
            <CommandBar.PrimaryCommands>
                <AppBarToggleButton x:Name="atbPlaylists" Icon="List" Label="Playlists"/>
                <AppBarButton Icon="Previous" Label="Previous" Click="AbbPrevious_Click"/>
                <AppBarButton Label="{Binding Service.Audio.PlayState,Converter={StaticResource isPlayPauseLabelCon}}"
                              Click="AbbPlayPause_Click">
                    <AppBarButton.Icon>
                        <SymbolIcon Symbol="{Binding Service.Audio.PlayState,Converter={StaticResource isPlayPauseIconCon}}"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Icon="Next" Label="Next" Click="AbbNext_Click"/>
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
                <AppBarToggleButton x:Name="atbViewIndex" Icon="List" Label="Index"/>
                <AppBarToggleButton x:Name="atbAdvSettings" Icon="More" Label="Advanced settings"/>
                <AppBarButton Icon="Setting" Label="All settings" Click="AbbSettings_Click"/>
                <AppBarButton Icon="Admin" Label="Debug" Click="AbbDebug_Click"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
