<Window x:Class="AudioPlayerFrontend.BuildOpenWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AudioPlayerFrontend"
        xmlns:con="clr-namespace:StdOttFramework.Converters;assembly=StdOttFrameworkLib"
        xmlns:build="clr-namespace:AudioPlayerBackend.Build;assembly=AudioPlayerBackendLib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Open Service - Hotkey Music" Height="300" Width="500" ResizeMode="NoResize">

    <Window.Resources>
        <build:BuildEndedType x:Key="canceled">Canceled</build:BuildEndedType>
        <con:VisibleCollapsedConverter x:Key="idleVisCon" CompareValue="Canceled" DecideType="Enum"/>
        <con:VisibleCollapsedConverter x:Key="openVisCon" DecideType="IsNull"/>
        <con:CollapsedVisibleConverter x:Key="excCon" DecideType="IsNull"/>

        <con:FalsyConverter x:Key="playCon" CompareValue="Playing" DecideType="Enum"/>
        <con:FalsyConverter x:Key="pauseCon" CompareValue="Paused" DecideType="Enum"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
            <TextBlock Text="Opening Service:" FontSize="20" Margin="5,0"/>
            <TextBlock FontSize="18" VerticalAlignment="Center" Text="{Binding Communicator.Name}"/>
        </StackPanel>

        <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top"
                    Visibility="{Binding CompleteToken.IsEnded,Converter={StaticResource openVisCon}}">
            <ProgressBar IsIndeterminate="True" Height="20" Margin="30,5"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="Cancel" Width="100" Margin="5" Click="BtnCancel_Click"/>
                <Button Content="Settings" Width="100" Margin="5" Click="BtnOpeningSettings_Click"/>
                <Button Content="Exception" Width="100" Margin="5"
                        Visibility="{Binding ElementName=micException,Path=Output,
                          Converter={StaticResource excCon}}" Click="BtnException_Click"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top"
                    Visibility="{Binding CompleteToken.IsEnded,Converter={StaticResource idleVisCon}}">
            <Button Content="Retry" Width="100" Margin="5" Click="BtnRetry_Click"/>
            <Button Content="Settings" Width="100" Margin="5" Click="BtnSettings_Click"/>
            <Button Content="Exception" Width="100" Margin="5" 
                    Visibility="{Binding ElementName=micException,Path=Output,
                      Converter={StaticResource excCon}}" Click="BtnException_Click"/>
        </StackPanel>

        <TextBlock Grid.Row="2" HorizontalAlignment="Center" Margin="2" TextWrapping="Wrap"
                   Text="{Binding ElementName=micException,Path=Output.Message}"/>

        <StackPanel Grid.Row="3" Orientation="Horizontal"
                    HorizontalAlignment="Center" VerticalAlignment="Top">
            <Button Content="Previous" Width="75" Margin="5" Click="BtnPrevious_Click"/>
            <Button Content="Play" Width="75" Margin="5" Click="BtnPlay_Click"
                    IsEnabled="{Binding SendPlayState,Converter={StaticResource playCon}}"/>
            <ToggleButton Content="Toggle" Width="75" Margin="5" 
                          IsChecked="{Binding SendToggle,Mode=OneWay}" Checked="TbnToggle_Checked"/>
            <Button Content="Pause" Width="75" Margin="5" Click="BtnPause_Click"
                    IsEnabled="{Binding SendPlayState,Converter={StaticResource pauseCon}}"/>
            <Button Content="Next" Width="75" Margin="5" Click="BtnNext_Click"/>
        </StackPanel>

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center" Margin="3"
                    Visibility="{Binding CommunicatorToken.Result,Converter={StaticResource openVisCon}}">
            <TextBlock Text="SongOffset: "/>
            <TextBlock Text="{Binding SongOffset}"/>
        </StackPanel>

        <con:MultipleInputs4Converter Name="micException" 
                                      Input0="{Binding CommunicatorToken.Exception}"
                                      Input1="{Binding SyncToken.Exception}"
                                      Input2="{Binding PlayerToken.Exception}"
                                      Input3="{Binding CompleteToken.Exception}"
                                      Convert="MicException_Convert"/>

        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center" Margin="3">
            <TextBlock Text="State: "/>
            <TextBlock Text="{Binding State}"/>
        </StackPanel>

        <ListBox Grid.Row="6" ItemsSource="{Binding Communicator.InitProps}"/>
    </Grid>
</Window>
